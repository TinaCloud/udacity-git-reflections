When would you want to use a remote repository rather than keeping all your work local?
    Whenever you want to work from multiple computers or if you want to collaborate with others, or if you just want to share your work

How to sync github to local git repository:
    "git pull origin master"

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
    If you're collaborating, someone else's change my be incompatible with what you're working on, or it could just confuse you when things change without you knowing.
    Also, if a recent change on github introduces a bug or security vulnerability, you would want to keep that away from your local version until it is fixed.

Describe the differences between forks, clones, and branches.  When would you use one instead of another?
    Forks are copies of a github repository onto github, with links back to the origin and tracking to see how often it's forked
    Clones are copies of a repository (locally or on github) onto your local machine. No tracking or links to the original.
    Branches are part of a repository that breaks from the main version. It is based on master, but has changes to it.

git fetch: pulls remote repository state into branch "origin/master", but leaves branch "master" alone
    git pull origin master = git fetch origin; git merge master origin/master

What is the benefit of having a copy of the last known state of the remote stored locally?
    You can keep track of how many commits you are ahead of the remote with git status, thus knowing if you need to push your changes
    you can also use git fetch and git status to see if the remote repository has changes ahead of your local copy. You can then work on merging those changes
    you can also probably do work offline more effectively because you can always look at the state of the remote (as you last saw it) for reference

How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?
    I'd use Google Docs because it allows real-time collaboration on the same document, which is nice.
    It doesn't have the ability to go back in time, or have multiple versions, though, which is a really nice feature of Git.
    It also requires an internet connection.

When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?
    Experimental features, offshoots (different modes of the program), and when collaborating with others or preserving the "production quality" version are all reasons you'd want to use a branch.
    Changing directly in master is quicker and easier (doesn't require checkouts and merges), but branches offer more control.